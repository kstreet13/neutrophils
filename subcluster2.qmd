---
title: "Neutrophil Subclustering 2"
format: html
embed-resources: true
---

## Surgical Control Samples

```{r}
#| echo: false
#| message: false
source('setup.R')
cpm <- t(t(1e6*counts)/colSums(counts))
idx <- which(pheno$group == 'SC')
pheno <- pheno[idx, ]
counts <- counts[, idx]
cpm <- cpm[, idx]

# PCA
filt <- which(rowMeans(cpm) > 1)
pca <- BiocSingular::runPCA(t(log1p(cpm[filt, ])), rank=ncol(counts))
```

```{r}
#| echo: false
#| message: false
require(plotly)
plot_ly(data.frame(pca$x), x=~PC1, y=~PC2, z=~PC3, color = pheno$color, colors = sort(unique(pheno$color))) |> layout(scene = list(aspectmode='data'))
```
Timepoint A = green

Timepoint B = red

Timepoint C = purple

The importance score here is based solely on the top 3 PCs. If we did a similar thing across all PCs, it would reproduce the variance of each gene. I don't think either measure would be particularly informative.

```{r}
imp <- sqrt(rowSums(pca$rotation[,1:3]^2))
barplot(sort(imp, decreasing = TRUE)[1:20], las=2, main = 'Top 20 Genes by PCA importance')
```
```{r}
#| echo: false
#| message: false
barplot(sort(imp, decreasing = TRUE)[1:100], col = c(rep('grey50',20),rep(2,80)), main = 'Top 100 Genes by PCA importance', las=2, cex.names = .2)
```

# All Surgical Samples

```{r}
#| echo: false
#| message: false
#SC, SVS, and MVS
source('setup.R')
cpm <- t(t(1e6*counts)/colSums(counts))
idx <- which(pheno$group %in% c('SC','SVS','MVS'))
pheno <- pheno[idx, ]
counts <- counts[, idx]
cpm <- cpm[, idx]

# PCA
filt <- which(rowMeans(cpm) > 1)
pca <- BiocSingular::runPCA(t(log1p(cpm[filt, ])), rank=ncol(counts))
```

```{r}
#| echo: false
print('Samples:')
print(sort(pheno$patient))
```

```{r}
#| echo: false
#| message: false
require(plotly)
plot_ly(data.frame(pca$x), x=~PC1, y=~PC2, z=~PC3, color = pheno$color, colors = sort(unique(pheno$color))) |> layout(scene = list(aspectmode='data'))
```
SC, Timepoint A = green

SVS/MVS, Timepoint A = forestgreen

SC, Timepoint B = red

SVS/MVS, Timepoint B = firebrick

SC, Timepoint C = purple

SVS/MVS, Timepoint C = slateblue4


```{r}
#| echo: false
# clustering
clusMat <- NULL

require(mclust)
mc <- Mclust(pca$x[,1:3], G=1:6)

#heatmap(coClus, ColSideColors = as.character(clus), RowSideColors = c('1','2')[factor(pheno$mmp8)])
heatmap(as.matrix(dist(pca$x[,1:4])), ColSideColors = as.character((c(4,5,6,7))[mc$classification]), RowSideColors = colorby(pheno$group), symm = TRUE, labRow = pheno$mmp8)
```

```{r}
#| echo: false
#| message: false
require(plotly)
plot_ly(data.frame(pca$x), x=~PC1, y=~PC2, z=~PC3, color = as.character((c(4,5,6,7))[mc$classification]), colors = sort(unique(as.character((c(4,5,6,7))[mc$classification])))) |> layout(scene = list(aspectmode='data'))
```



