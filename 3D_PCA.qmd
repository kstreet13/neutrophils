---
title: "3D PCA"
format: html
editor: visual
embed-resources: true
---


```{r}
#| message: false
#| echo: false

source('setup.R')
cpm <- t(t(1e6*counts)/colSums(counts))

#######
# PCA #
#######
require(matrixStats); require(sparseMatrixStats)
rm <- rowMeans(cpm)
rv <- rowVars(cpm)
filt <- which(rm > 1 & rv > 1)
#filt <- which(rowVars(cpm) >= sort(rowVars(cpm), decreasing = TRUE)[10000])

require(BiocSingular)
pca <- BiocSingular::runPCA(t(log1p(cpm[filt, ])), rank=64)


### OLD VERSIONS
# PC1 & PC2
# plot(pca$x, asp=1, col=pheno$color, cex=3)
# 3D
# require(plotly)
# plot_ly(data.frame(pca$x), x=~PC1, y=~PC2, z=~PC3, color = pheno$color, colors = sort(unique(pheno$color)))
###


# open circles for controls, filled circles for mild vasoplegic syndrome, filled
# triangles or squares (or whatever other shape) for severe vasoplegic
# syndrome. Instead of having dark and light red/purple indicate mild vs.
# severe, the shapes will indicate this difference and there will be only one
# shade of green, red, and purple.

# set up new plotting variables
pheno$shape <- 1
pheno$shape[pheno$group=='MVS'] <- 16
pheno$shape[pheno$group=='SVS'] <- 15
pheno$color2 <- pheno$color
pheno$color2[pheno$color=='firebrick'] <- 'red'
pheno$color2[pheno$color=='forestgreen'] <- 'green'
pheno$color2[pheno$color=='slateblue4'] <- 'purple'
pheno$color2[pheno$mmp8=='MMP8+'] <- 'brown4'
#pheno$color2[pheno$color=='purple'] <- 'blue'
#pheno$color2[pheno$group=='EC'] <- 'purple'
pheno$shape_plotly <- as.character(pheno$shape)
pheno$shape_plotly[pheno$shape == '1'] <- 'circle-open'
pheno$shape_plotly[pheno$shape == '15'] <- 'square'
pheno$shape_plotly[pheno$shape == '16'] <- 'circle'


# 3D
require(plotly)
plot_ly(data.frame(pca$x), x=~PC1, y=~PC2, z=~PC3,
        color = pheno$color2, colors = sort(unique(pheno$color2)),
        symbol = ~pheno$shape_plotly, symbols = sort(unique(pheno$shape_plotly)))

```

